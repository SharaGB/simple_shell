.\" Manpage for Simple Shell.
.TH SIMPLE_SHELL 1 "08 Dec 2021" "simple_shell man page"

.SH NAME
.B Simple Shell
\- Simple command interpreter (bash)

.SH SYNOPSIS
.B #include \/"main.h"
.RS
.B [user_command] [options] | [file]

.SH DESCRIPTION
.B Simple Shell
is an command language interpreter that executes commands read from the standard input or from a file. Can be execute in two ways, the interactive and non-interactive mode.

.SH INSTALLATION
.B git clone:
Use git to clone this repository in your local machine:
.PP
.RS
.B $ git clone https://github.com/SharaGB/simple_shell.git

.SH COMPILATION
Compile simple_shell using gcc plus the flags specified above. As in this example (note the use of the wildcard * which allows all related '.c' files to be compiled simultaneously), use the command:
.PP
.RS
.B $ gcc -Wall -Werror -Wextra -pedantic -std=gnu89 *.c -o hsh

.SH USAGE
simple_shell can be run in interactive mode by entering the following command on the command line followed by "enter":
.IP
.br
.\&
.RS
.B \&$ ./hsh
.br
.B ðŸ§¿ $ /bin/ls
.br
.B \&hsh main.c shell.c
.br
.B ðŸ§¿ $
.P
.RE
Note that the prompt ('$') will appear and you will then be in interactive mode and can enter the commands followed by "enter".

.PP
.RE
Also, simple_shell can be run in non-interactive mode by using shell scripts. You can do this via pipes:
.IP
.br
.\&
.RS
.B \&$ echo "/bin/ls" | ./hsh
.br
.B hsh main.c shell.c test_ls_2
.br
.B $
.P
.RE

.SH BUILT-IN
The Simple Shell has as built-in functions:
.TP
.br
.B env
With the command env, Simple Shell display, in the standar output, all the variables store in the environment.

.BR Usage:
env

.TP
.br
.B exit
Exits the shell, do not handle arguments

.BR Usage:
exit

.TP
.br
.B help:
Display the help information about built-in functions.

.BR Usage:
help [BUILTIN]
.P
.RE

Example of builtin commands:

.B env:
.IP
.br
.\&
.RS
\&ðŸ§¿ $ env
.br
.RS
\&SHELL=/bin/bash
.br
\&COLORTERM=truecolor
.br
\&TERM_PROGRAM_VERSION=1.62.3
.br
\&WSL_DISTRO_NAME=Ubuntu-20.04
.br
\&NAME=DESKTOP-MHDLLP0
.br
\&PWD=/home/shara/simple_shell
.br
\&LOGNAME=shara
.br
\&VSCODE_GIT_ASKPASS_NODE=/home/shara/.vscode-server/bin/ccbaa2d27e38e5afa3e5c21c1c7bef4657064247/node
.br
\&MOTD_SHOWN=update-motd
.br
\&HOME=/home/shara
.br
\&LANG=C.UTF-8
.P
.RE

.B Help [BUILIN]:
.IP
.br
.\&
.RS
\&ðŸ§¿ $ help help
.br
\&help: help
    help: help [command]
        Display information about builtin commands.
        Displays brief summaries of builtin commands.

Exit Status:
    Returns success unless PATTERN is not found or an invalid option is given.

    So that's what help command does telling everything
    about the command and helping you out.
.br
\&ðŸ§¿ $
.P
.RE

.B exit:
.IP
.br
.\&
.RS
\&shara@DESKTOP-MHDLLP0:~/simple_shell$ ./hsh
.br
\&ðŸ§¿ $ ls
AUTHORS    Test        execute.c    function_aux.c    help_cd   help_exit  hsh                 main.h              non_built_in.c          token.c
README.md  built_in.c  free_args.c  function_aux_2.c  help_env  help_help  interactive_mode.c  man_1_simple_shell  non_interactive_mode.c
.br
\&ðŸ§¿ $ ps
  PID TTY          TIME CMD
 2635 pts/2    00:00:00 bash
30217 pts/2    00:00:00 hsh
30285 pts/2    00:00:00 ps
.br
\&ðŸ§¿ $ exit
.br
\&shara@DESKTOP-MHDLLP0:~/simple_shell$
.P
.RE

.SH MAN
.B Man Page ðŸ“‘
To see the man page of our simple_shell function use:
.PP
.RS
.B man ./man_1_simple_shell

.SH AUTHOR
\fICarlos RincÃ³n, 3901@holbertonscool.com

Shara GarcÃ­a Betancur, 3779@holbertonscool.com\fP
